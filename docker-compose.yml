version: '3.8'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio
  command: server --console-address ":9001" /minio/data
  ports:
    - "9000:9000"
    - "9001:9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5

services:

  minio:
    <<: *minio-common
    container_name: minio
    hostname: minio
    volumes:
      - minio_data:/data

  createbuckets:
    image: minio/mc
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://localhost:9000 minioadmin minioadmin;
      /usr/bin/mc mb images;
      /usr/bin/mc policy set none images;"
  db:
    image: postgres:16-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: products
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres 
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
  
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend:/app/frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  
volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local